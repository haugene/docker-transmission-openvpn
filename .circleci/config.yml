version: 2.1
workflows:

  # Defines a workflow for building and pushing updated documentation to GitHub pages
  build-documentation:
    jobs:
      - build-and-deploy-gh-pages:
          filters:
            branches:
              only: master
  
  # Defines workflow for when to build the different Docker images
  build-docker-images:
    jobs:
      - build-with-buildx:
          context: dockerhub
          filters:
            branches:
              only:
                - dev
                - master
            tags:
              only: /^\d+\.\d+.*/

# Job definitions, used by the workflows.
jobs:
  build-with-buildx:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - run: sudo apt update && sudo apt install -y qemu-user
      - run:
          name: Download and install docker-buildx plugin
          command: |
            mkdir -p ~/.docker/cli-plugins
            curl -sSL https://github.com/docker/buildx/releases/download/v0.4.2/buildx-v0.4.2.linux-amd64 -o ~/.docker/cli-plugins/docker-buildx
            chmod a+x ~/.docker/cli-plugins/docker-buildx
      - run:
          name: Login to Docker Hub
          command: echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
      - calculate-tag-name
      - run:
          name: Set up buildx and build/push images
          command: |
            docker buildx create --name mybuilder
            docker buildx use mybuilder
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
            docker buildx ls
            docker buildx build -t haugene/transmission-openvpn:$IMAGE_TAG --progress plain \
              --platform linux/arm,linux/arm64,linux/amd64 \
              --build-arg REVISION=$CIRCLE_SHA1 \
              --push .

  build-and-deploy-gh-pages:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: "Set Git name for commits"
          command: git config --global user.name "CircleCI"
      - run:
          name: "Install Mkdocs and Material theme"
          command: pip install --user mkdocs mkdocs-material
      - run:
          name: "Build and push site"
          command: mkdocs gh-deploy --message "Deployed {sha} with MkDocs version {version}. [skip ci]"

commands:
  calculate-tag-name:
    description: "Calculates the target tag name for Docker image"
    steps:
      - run:
          name: Calculate tag to set for the built Docker image
          command: |
            if [ ! -z $CIRCLE_TAG ]; then
              TAG_VERSION=$CIRCLE_TAG
            elif [ "$CIRCLE_BRANCH" = "master" ]; then
              TAG_VERSION=latest
            else
              TAG_VERSION=$CIRCLE_BRANCH;
            fi

            echo "export IMAGE_TAG=$TAG_VERSION$TAG_DISTRO" >> $BASH_ENV
